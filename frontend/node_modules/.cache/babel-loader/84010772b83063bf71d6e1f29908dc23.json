{"ast":null,"code":"var _jsxFileName = \"/app/src/components/BalanceComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport Web3 from \"web3\";\nimport Payments from \"../build/contracts/Payments.json\";\nimport red from \"@material-ui/core/colors/red\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BalanceComponent() {\n  _s();\n\n  const [balance, changeBalance] = useState(0);\n  const [balanceInsideContract, changeInsideBalance] = useState(\"\");\n  useEffect(() => {\n    async function getAccounts(ethereum) {\n      changeAddress(await ethereum.request({\n        method: 'eth_accounts'\n      }));\n    }\n\n    async function getBalance(ethereum) {\n      let web3 = new Web3();\n      const usersBalance = await ethereum.request({\n        method: 'eth_getBalance',\n        params: [address[0], \"latest\"]\n      });\n      const intBalance = parseInt(usersBalance, 16);\n      const balance = web3.utils.fromWei(String(intBalance), \"ether\");\n      return balance;\n    }\n\n    async function getCurrentProviderAndBalance() {\n      try {\n        if (typeof window.ethereum !== \"undefined\") {\n          console.log(\"connected\");\n        } else {\n          alert(\"error occurred\");\n        }\n\n        await getAccounts(window.ethereum);\n        changeBalance(await getBalance(window.ethereum));\n      } catch (e) {\n        console.error(e + \"error occurred\");\n      }\n    }\n\n    async function getBalanceInsideContract() {\n      let web3 = new Web3();\n      await getAccounts(window.ethereum);\n      console.log(address);\n      const contract = new web3.eth.Contract(Payments.abi, \"0x14Fcb51087d9651F0b11CECEB3E989D8d01F4984\", {\n        from: address,\n        gasLimit: \"600000\",\n        gasPrice: \"20000000000\"\n      });\n      contract.methods.getCurrentBalance().send({\n        from: address\n      }).then(function (receipt) {\n        changeInsideBalance(receipt.events.currentBalance.returnValues.amount);\n      }, function (callback, err) {\n        console.error(err);\n      });\n    }\n\n    getBalanceInsideContract();\n    getCurrentProviderAndBalance();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"p\",\n      children: [\"Balance inside metamsk \", balance, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"p\",\n      color: \"red\",\n      children: [\"Balance inside smart contract \", balanceInsideContract, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BalanceComponent, \"cI+65nLFq+8S1ogYH2i9q04BGF0=\");\n\n_c = BalanceComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BalanceComponent\");","map":{"version":3,"sources":["/app/src/components/BalanceComponent.js"],"names":["React","useEffect","useState","Typography","Web3","Payments","red","BalanceComponent","balance","changeBalance","balanceInsideContract","changeInsideBalance","getAccounts","ethereum","changeAddress","request","method","getBalance","web3","usersBalance","params","address","intBalance","parseInt","utils","fromWei","String","getCurrentProviderAndBalance","window","console","log","alert","e","error","getBalanceInsideContract","contract","eth","Contract","abi","from","gasLimit","gasPrice","methods","getCurrentBalance","send","then","receipt","events","currentBalance","returnValues","amount","callback","err"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useEffect, useState} from \"react\"\nimport Typography from '@material-ui/core/Typography'\nimport Web3 from \"web3\";\nimport Payments from \"../build/contracts/Payments.json\"\nimport red from \"@material-ui/core/colors/red\"\n\nexport default function BalanceComponent(){\n    const[balance, changeBalance] = useState(0);\n    const[balanceInsideContract, changeInsideBalance] = useState(\"\");\n    \n    useEffect(() => {\n        async function getAccounts(ethereum){\n            changeAddress(await ethereum.request({method: 'eth_accounts'}))\n        }\n        async function getBalance(ethereum){\n            let web3 = new Web3()\n            const usersBalance = await ethereum.request({method: 'eth_getBalance', params: [address[0], \"latest\"]})\n            const intBalance =  parseInt(usersBalance,16)\n            const balance = web3.utils.fromWei(String(intBalance), \"ether\")\n            return balance;\n        }\n        async function getCurrentProviderAndBalance(){\n        try{\n            if(typeof window.ethereum !== \"undefined\"){\n                console.log(\"connected\")\n                \n            }else{\n                alert(\"error occurred\")\n            }\n            await getAccounts(window.ethereum)\n            changeBalance(await getBalance(window.ethereum))\n            \n        }catch(e){\n            console.error(e + \"error occurred\")\n        }\n    }\n    async function getBalanceInsideContract(){\n        let web3 = new Web3()\n        \n        await getAccounts(window.ethereum)\n        console.log(address)\n        const contract = new web3.eth.Contract(Payments.abi, \"0x14Fcb51087d9651F0b11CECEB3E989D8d01F4984\",{\n            from: address,\n            gasLimit: \"600000\",\n            gasPrice: \"20000000000\"\n        })\n        contract.methods.getCurrentBalance().send({from: address }).then(function(receipt){\n            changeInsideBalance(receipt.events.currentBalance.returnValues.amount)\n        }, function(callback, err){\n            console.error(err)\n        })\n    }\n\n    getBalanceInsideContract()\n    getCurrentProviderAndBalance()\n    }, [])\n\n    return(\n        <div>\n            <Typography\n            variant=\"p\"\n            >Balance inside metamsk {balance} ETH</Typography>\n            <Typography\n            variant=\"p\"\n            color={\"red\"}\n            >Balance inside smart contract {balanceInsideContract} ETH</Typography>\n\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}