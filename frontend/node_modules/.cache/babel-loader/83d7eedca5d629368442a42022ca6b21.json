{"ast":null,"code":"var _jsxFileName = \"/app/src/components/BalanceComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BalanceComponent() {\n  _s();\n\n  const [balance, changeBalance] = useState(0);\n  useEffect(() => {\n    async function getAccounts(ethereum) {\n      return await ethereum.request({\n        method: 'eth_accounts'\n      });\n    }\n\n    async function getBalance(ethereum, address) {\n      const web3 = new Web3(ethereum);\n      const usersBalance = await ethereum.request({\n        method: 'eth_getBalance',\n        params: [address, \"latest\"]\n      });\n      const intBalance = parseInt(usersBalance, 16);\n      console.log(Web3.utils.fromWei(intBalance, \"ether\"));\n      return intBalance;\n    }\n\n    async function jd() {\n      try {\n        if (typeof window.ethereum !== \"undefined\") {\n          console.log(\"connected\");\n        } else {\n          alert(\"error occurred\");\n        }\n\n        console.log(\"is ethereum\");\n        console.log(window.ethereum.isMetaMask);\n        console.log(window.ethereum);\n        const address = await getAccounts(window.ethereum);\n        changeBalance(await getBalance(window.ethereum, address[0]));\n      } catch (e) {\n        console.error(e + \"error occurred\");\n      }\n    }\n\n    jd();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: [\"Balance \", balance, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BalanceComponent, \"goroibiclU9byzgN/eiqnjVnI4c=\");\n\n_c = BalanceComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BalanceComponent\");","map":{"version":3,"sources":["/app/src/components/BalanceComponent.js"],"names":["React","useEffect","useState","Web3","Typography","BalanceComponent","balance","changeBalance","getAccounts","ethereum","request","method","getBalance","address","web3","usersBalance","params","intBalance","parseInt","console","log","utils","fromWei","jd","window","alert","isMetaMask","e","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAIA,eAAe,SAASC,gBAAT,GAA2B;AAAA;;AACtC,QAAK,CAACC,OAAD,EAAUC,aAAV,IAA2BL,QAAQ,CAAC,CAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeO,WAAf,CAA2BC,QAA3B,EAAoC;AAChC,aAAO,MAAMA,QAAQ,CAACC,OAAT,CAAiB;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAjB,CAAb;AACH;;AACD,mBAAeC,UAAf,CAA0BH,QAA1B,EAAoCI,OAApC,EAA4C;AACxC,YAAMC,IAAI,GAAG,IAAIX,IAAJ,CAASM,QAAT,CAAb;AAEA,YAAMM,YAAY,GAAG,MAAMN,QAAQ,CAACC,OAAT,CAAiB;AAACC,QAAAA,MAAM,EAAE,gBAAT;AAA2BK,QAAAA,MAAM,EAAE,CAACH,OAAD,EAAU,QAAV;AAAnC,OAAjB,CAA3B;AACA,YAAMI,UAAU,GAAIC,QAAQ,CAACH,YAAD,EAAc,EAAd,CAA5B;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAI,CAACkB,KAAL,CAAWC,OAAX,CAAmBL,UAAnB,EAA+B,OAA/B,CAAZ;AACA,aAAOA,UAAP;AACH;;AACD,mBAAeM,EAAf,GAAmB;AACnB,UAAG;AACC,YAAG,OAAOC,MAAM,CAACf,QAAd,KAA2B,WAA9B,EAA0C;AACtCU,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEH,SAHD,MAGK;AACDK,UAAAA,KAAK,CAAC,gBAAD,CAAL;AACH;;AACDN,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACf,QAAP,CAAgBiB,UAA5B;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACf,QAAnB;AACA,cAAMI,OAAO,GAAE,MAAML,WAAW,CAACgB,MAAM,CAACf,QAAR,CAAhC;AACAF,QAAAA,aAAa,CAAC,MAAMK,UAAU,CAACY,MAAM,CAACf,QAAR,EAAkBI,OAAO,CAAC,CAAD,CAAzB,CAAjB,CAAb;AAEH,OAbD,CAaC,OAAMc,CAAN,EAAQ;AACLR,QAAAA,OAAO,CAACS,KAAR,CAAcD,CAAC,GAAG,gBAAlB;AACH;AACJ;;AACDJ,IAAAA,EAAE;AACD,GAhCQ,EAgCN,EAhCM,CAAT;AAkCA,sBACI;AAAA,2BACI,QAAC,UAAD;AACA,MAAA,OAAO,EAAC,IADR;AAAA,6BAEUjB,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA9CuBD,gB;;KAAAA,gB","sourcesContent":["import React from \"react\";\nimport {useEffect, useState} from \"react\"\nimport Web3 from \"web3\";\nimport Typography from '@material-ui/core/Typography'\n\n\n\nexport default function BalanceComponent(){\n    const[balance, changeBalance] = useState(0);\n\n    useEffect(() => {\n        async function getAccounts(ethereum){\n            return await ethereum.request({method: 'eth_accounts'})\n        }\n        async function getBalance(ethereum, address){\n            const web3 = new Web3(ethereum)\n            \n            const usersBalance = await ethereum.request({method: 'eth_getBalance', params: [address, \"latest\"]})\n            const intBalance =  parseInt(usersBalance,16)\n            \n            console.log(Web3.utils.fromWei(intBalance, \"ether\"))\n            return intBalance;\n        }\n        async function jd(){\n        try{\n            if(typeof window.ethereum !== \"undefined\"){\n                console.log(\"connected\")\n                \n            }else{\n                alert(\"error occurred\")\n            }\n            console.log(\"is ethereum\")\n            console.log(window.ethereum.isMetaMask)\n            console.log(window.ethereum)\n            const address =await getAccounts(window.ethereum)\n            changeBalance(await getBalance(window.ethereum, address[0]))\n            \n        }catch(e){\n            console.error(e + \"error occurred\")\n        }\n    }\n    jd()\n    }, [])\n\n    return(\n        <div>\n            <Typography\n            variant=\"h6\"\n            >Balance {balance} ETH</Typography>\n\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}