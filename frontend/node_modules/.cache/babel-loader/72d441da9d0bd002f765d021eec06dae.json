{"ast":null,"code":"var _jsxFileName = \"/app/src/components/FormComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { useState } from \"react\";\nimport loadable from '@loadable/component';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\nimport CheckIfSessionCookieExists from \"./CheckIfSessionCookieExists\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextField = loadable(_c = () => import(\"./FormFields/TextField\"));\n_c2 = TextField;\nconst styles = makeStyles(theme => ({\n  root: {},\n  form: {\n    display: \"block\",\n    marginTop: theme.spacing(3),\n    marginLeft: \"40%\"\n  }\n}));\nexport default function FormComponent(props) {\n  _s();\n\n  const classes = styles();\n  const isLoggedIn = CheckIfSessionCookieExists();\n  let passwordFieldState = {\n    true: \"text\",\n    false: \"password\"\n  };\n  const [passwordVisibility, changePasswordVisibility] = useState(false);\n  const [email, changeEmail] = useState(\"\");\n  const [username, changeUsername] = useState(\"\");\n  const [password, changePassword] = useState(\"\");\n  const history = useHistory();\n\n  const onChange = e => {\n    e.preventDefault();\n    console.log(e.target.name);\n\n    switch (e.target.name) {\n      case \"email\":\n        changeEmail(e.target.value);\n        break;\n\n      case \"username\":\n        changeUsername(e.target.value);\n        break;\n\n      case \"password\":\n        changePassword(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  function onSubmit(e) {\n    console.log(e);\n\n    switch (e.target.name) {\n      case \"login-register\":\n        const passwordRegex = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})');\n\n        if (email === \"\") {\n          console.log(\"empty email\");\n        } else if (password === \"\" || password.match(passwordRegex)) {\n          console.log(\"empty or poor password\");\n        } else if (username === \"\") {\n          console.log(\"empty username\");\n        }\n\n        console.log(username);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  if (!isLoggedIn) {\n    switch (props.version) {\n      case \"login-register\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            method: \"post\",\n            onSubmit: onSubmit,\n            name: \"login\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.form,\n              type: \"text\",\n              id: \"username-login\",\n              label: \"username\",\n              name: \"username\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.form,\n              type: \"email\",\n              id: \"email-login\",\n              label: \"email\",\n              name: \"email\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.form,\n              type: passwordFieldState[passwordVisibility],\n              id: \"password-login\",\n              label: \"password\",\n              name: \"password\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => passwordVisibility === false ? changePasswordVisibility(true) : changePasswordVisibility(false),\n              children: passwordVisibility === true ? /*#__PURE__*/_jsxDEV(VisibilityOffOutlinedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 50\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOutlinedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 81\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.form,\n              type: \"submit\",\n              variant: \"outlined\",\n              color: \"primary\",\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this);\n\n      case \"register\":\n        break;\n\n      default:\n        break;\n    }\n  } else {\n    switch (props.version) {\n      case \"addListing\":\n        break;\n\n      default:\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: history.push(\"/\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(FormComponent, \"M5KjMevJ4aRUR1FRk6pFZgLqMqE=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = FormComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextField$loadable\");\n$RefreshReg$(_c2, \"TextField\");\n$RefreshReg$(_c3, \"FormComponent\");","map":{"version":3,"sources":["/app/src/components/FormComponent.js"],"names":["React","makeStyles","useState","loadable","IconButton","VisibilityOutlinedIcon","VisibilityOffOutlinedIcon","Button","useHistory","CheckIfSessionCookieExists","FormControl","TextField","styles","theme","root","form","display","marginTop","spacing","marginLeft","FormComponent","props","classes","isLoggedIn","passwordFieldState","true","false","passwordVisibility","changePasswordVisibility","email","changeEmail","username","changeUsername","password","changePassword","history","onChange","e","preventDefault","console","log","target","name","value","onSubmit","passwordRegex","RegExp","match","version","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core'\nimport {useState} from \"react\"\nimport loadable from '@loadable/component'\nimport IconButton from \"@material-ui/core/IconButton\"\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport Button from '@material-ui/core/Button';\nimport {useHistory} from \"react-router-dom\"\nimport CheckIfSessionCookieExists from \"./CheckIfSessionCookieExists\"\nimport FormControl from \"@material-ui/core/FormControl\"\n\nconst TextField = loadable(()=> import(\"./FormFields/TextField\"))\n\nconst styles = makeStyles((theme) =>({\n    root:{\n\n    },\n    form:{\n        display: \"block\",\n        marginTop: theme.spacing(3),\n        marginLeft: \"40%\", \n    },\n\n}))\n\nexport default function FormComponent(props){\n    const classes = styles()\n    const isLoggedIn = CheckIfSessionCookieExists();\n    let passwordFieldState = { true : \"text\", false: \"password\"}\n    const [passwordVisibility, changePasswordVisibility] = useState(false);\n    const [email, changeEmail] = useState(\"\");\n    const [username, changeUsername] = useState(\"\");\n    const [password, changePassword] = useState(\"\");\n    const history = useHistory();\n\n    const onChange = (e) =>{\n        e.preventDefault();\n        console.log(e.target.name)\n        switch(e.target.name){\n            case \"email\":\n                changeEmail(e.target.value)\n                break\n            case \"username\":\n                changeUsername(e.target.value)\n                break\n            case \"password\":\n                changePassword(e.target.value)\n                break\n            default:\n                break\n        }\n    }\n    \n    function onSubmit(e){\n        console.log(e)\n        switch(e.target.name){\n            case \"login-register\":\n                const passwordRegex = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})')\n                if (email === \"\"){\n                    console.log(\"empty email\")\n                }else if(password === \"\" || password.match(passwordRegex)){\n                    console.log(\"empty or poor password\")\n                }else if(username === \"\"){\n                    console.log(\"empty username\")\n                }\n                console.log(username)\n                break\n            \n            default:\n                break\n        }\n    }\n    if (!isLoggedIn){\n        switch(props.version){\n            case \"login-register\":\n                return(\n                <div className={classes.root}>\n                <form method=\"post\" onSubmit={onSubmit} name=\"login\">\n                    <TextField className={classes.form} type=\"text\" id=\"username-login\" label=\"username\" name=\"username\" onChange={onChange}></TextField>\n                    <TextField className={classes.form} type=\"email\" id=\"email-login\" label=\"email\" name=\"email\" onChange={onChange}></TextField>\n                    <TextField className={classes.form} type={passwordFieldState[passwordVisibility]} id=\"password-login\" label=\"password\" name=\"password\" onChange={onChange}></TextField>\n                    <IconButton onClick={()=>passwordVisibility===false ? changePasswordVisibility(true) : changePasswordVisibility(false)}>\n                    {passwordVisibility===true ? <VisibilityOffOutlinedIcon/> : <VisibilityOutlinedIcon/>}\n                    </IconButton>\n                    <Button className={classes.form} type=\"submit\" variant=\"outlined\" color=\"primary\">Log In</Button>\n                </form>\n                </div>\n                )    \n            case \"register\":\n                break\n\n            default:\n                break\n        }\n    }else{\n        switch(props.version){\n            case \"addListing\":\n                break\n            default:\n                break\n        }\n        return(\n            <div>\n                {history.push(\"/\")}\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}