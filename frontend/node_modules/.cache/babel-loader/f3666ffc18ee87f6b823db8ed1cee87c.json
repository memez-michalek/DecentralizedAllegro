{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport React from \"react\";\nimport fs from \"fs\";\nimport Payments from \"./build/contracts/Payments.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      event.preventDefault();\n\n      switch (event.target) {\n        case event.target === \"email\":\n          this.setState({\n            email: event.target.value\n          });\n          break;\n\n        case event.target === \"address\":\n          this.setState({\n            address: event.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      account: \"\",\n      balance: \"\",\n      address: \"\",\n      amount: \"\",\n      web3: null\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      let web3;\n\n      if (window.ethereum) {\n        web3 = new Web3(window.ethereum);\n      } else if (window.web3.currentProvider) {\n        web3 = new Web3(window.web3.currentProvider);\n      } else {\n        alert(\"no provider available\");\n      }\n\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0]);\n      console.log(accounts[2]);\n      const balance = await web3.eth.getBalance(accounts[0]);\n      /*\n      web3.eth.sendTransaction({\n        from: accounts[0], \n        data: Payments.abi,\n      }, function(error, callback){\n        console.log(error)\n      })\n      */\n\n      const contract = new web3.eth.Contract(Payments.abi, \"0x29118205e1DC737F52FE0E9A82d1085b44309609\", {\n        from: accounts[0],\n        gasPrice: '2000000000'\n      });\n      this.setState({\n        account: accounts[0],\n        balance: balance,\n        web3: web3\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.address);\n    console.log(this.state.amount);\n    /*\n    this.web3.eth.sendTransaction({\n      from: this.state.account,\n      to: this.state.address,\n      value: this.state.amount,\n    }).then(function(receipt){\n      console.log(receipt);\n    })*/\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Metmask address \", this.state.account, \" Balance \", this.state.balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"address\",\n          type: \"text\",\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"amount\",\n          type: \"number\",\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/app/src/App.js"],"names":["Web3","React","fs","Payments","App","Component","constructor","props","onChange","event","preventDefault","target","setState","email","value","address","state","account","balance","amount","web3","componentDidMount","window","ethereum","currentProvider","alert","accounts","eth","getAccounts","console","log","getBalance","contract","Contract","abi","from","gasPrice","e","onSubmit","render"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from \"web3\";\n \n\n\nimport React from \"react\"\nimport fs from \"fs\"\nimport Payments from \"./build/contracts/Payments.json\"\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={account: \"\", balance: \"\", address: \"\", amount: \"\", web3: null}\n  }\n  async componentDidMount() {\n    try{\n      let web3;\n      if (window.ethereum){\n        web3 = new Web3(window.ethereum);\n      }else if(window.web3.currentProvider){\n        web3 = new Web3(window.web3.currentProvider) \n      }else{\n        alert(\"no provider available\")\n      }\n      \n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0])\n      console.log(accounts[2])\n      const balance = await web3.eth.getBalance(accounts[0]);\n      \n\n      /*\n      web3.eth.sendTransaction({\n        from: accounts[0], \n        data: Payments.abi,\n      }, function(error, callback){\n        console.log(error)\n      })\n      */\n\n      const contract = new web3.eth.Contract(Payments.abi, \"0x29118205e1DC737F52FE0E9A82d1085b44309609\", {\n        from: accounts[0],\n        gasPrice: '2000000000'\n      })\n      \n\n\n      this.setState({account: accounts[0], balance: balance, web3: web3})\n      \n      \n\n    }catch(e){\n      console.log(e)\n    }\n\n  }\n\n  onChange = (event) =>{\n    event.preventDefault();\n    switch(event.target){\n      case event.target === \"email\":\n        this.setState({email: event.target.value})\n        break;\n      case event.target === \"address\":\n        this.setState({address: event.target.value})\n        break;\n      default:\n        break;\n      }\n  }\n  \nasync onSubmit(e){\n  e.preventDefault()\n  \n  console.log(this.state.address)\n  console.log(this.state.amount)\n\n\n\n  /*\n  this.web3.eth.sendTransaction({\n    from: this.state.account,\n    to: this.state.address,\n    value: this.state.amount,\n  }).then(function(receipt){\n    console.log(receipt);\n  })*/\n\n\n}\n\n  render(){\n    \n\n    return (\n      <div>\n      <h1>Metmask address {this.state.account} Balance {this.state.balance}</h1>\n\n      \n      <form onSubmit={this.onSubmit}>\n        <label>Address</label>\n        <input name=\"address\" type=\"text\" onChange={this.onChange}></input>\n        <label>Amount</label>\n        <input name=\"amount\" type=\"number\" onChange={this.onChange}></input>\n        <button type=\"submit\"></button>\n      </form>\n\n\n      </div>\n\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}