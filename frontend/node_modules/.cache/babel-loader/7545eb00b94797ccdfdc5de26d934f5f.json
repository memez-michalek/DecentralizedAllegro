{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport React from \"react\";\nimport fs from \"fs\";\nimport Payments from \"./build/contracts/Payments.json\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      event.preventDefault();\n\n      if (event.target.name === \"amount\") {\n        this.setState({\n          amount: event.target.value\n        });\n      }\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const contract = new this.state.web3.eth.Contract(Payments.abi, \"0x764b8BAdAF577a341d42c0fc6C22177D438C9FE8\", {\n        gasPrice: \"20000000000\"\n      }, function (error, callback) {\n        if (error !== \"undefinded\") {\n          console.error(error);\n        } else {\n          console.log(callback);\n        }\n      });\n      console.log(this.state);\n      await contract.methods.deposit().send({\n        from: this.state.account,\n        gasPrice: \"20000000000\",\n        gasLimit: \"6000000\",\n        value: this.state.amount\n      }).then(function (receipt) {\n        console.log(receipt);\n      }, function (error, callback) {\n        console.error(error);\n        NotificationManager.info(\"transaction has been rejected\");\n      });\n    };\n\n    this.onWithdraw = event => {\n      event.preventDefault();\n\n      if (event.target.name === \"amount\") {\n        this.setState({\n          withdrawAmount: event.target.value\n        });\n      }\n    };\n\n    this.onSubmitWithdraw = async e => {\n      e.preventDefault();\n      const contract = new this.state.web3.eth.Contract(Payments.abi, \"0x764b8BAdAF577a341d42c0fc6C22177D438C9FE8\", {\n        gasPrice: \"20000000000\",\n        gasLimit: \"6000000\",\n        from: this.state.account\n      }, function (error, callback) {\n        console.log(error, callback);\n      });\n      await contract.methods.withdraw(this.state.withdrawAmount).send({\n        from: this.state.account,\n        gasPrice: \"20000000000\",\n        gasLimit: \"6000000\"\n      }).on(\"transactionHash\", hash => {\n        console.log(hash);\n      }).on(\"receipt\", receipt => {\n        console.log(receipt);\n      }).on(\"confirmation\", (confirmation, receipt) => {\n        console.log(confirmation, receipt);\n      }).on(\"error\", (error, callback) => {\n        console.log(error, callback);\n        callback(\"cannot witdraw\");\n      });\n    };\n\n    this.currentBalanceInside = async e => {\n      e.preventDefault();\n      const contract = new this.state.web3.eth.Contract(Payments.abi, \"0x764b8BAdAF577a341d42c0fc6C22177D438C9FE8\", {\n        gasPrice: \"20000000000\",\n        gasLimit: \"6000000\",\n        from: this.state.account\n      });\n      await contract.methods.getCurrentBalance().send({\n        from: this.state.account,\n        gasLimit: \"6000000\"\n      }).on(\"receipt\", receipt => {\n        console.log(receipt.events.CurrentBalance.returnValues.amount);\n        this.setState({\n          contractBalance: receipt.events.CurrentBalance.returnValues.amount\n        });\n      }).on(\"confirmation\", (transactionHash, receipt) => {\n        console.log(transactionHash, receipt);\n      }).on(\"error\", (error, callback) => {\n        console.error(error);\n        alert(\"transaction rejescted\");\n      });\n    };\n\n    this.state = {\n      account: \"\",\n      balance: \"\",\n      amount: \"\",\n      withdrawAmount: \"\",\n      contractBalance: \"\",\n      web3: null\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      let web3;\n\n      if (window.ethereum) {\n        web3 = new Web3(window.ethereum);\n      } else if (window.web3.currentProvider) {\n        web3 = new Web3(window.web3.currentProvider);\n      } else {\n        alert(\"no provider available\");\n      }\n\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0]);\n      console.log(accounts[2]);\n      const balance = await web3.eth.getBalance(accounts[0]);\n      /*\n      web3.eth.sendTransaction({\n        from: accounts[0], \n        data: Payments.abi,\n      }, function(error, callback){\n        console.log(error)\n      })\n      */\n\n      this.setState({\n        account: accounts[0],\n        balance: balance,\n        web3: web3\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NotificationManager, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Metmask address \", this.state.account, \" Balance \", this.state.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"amount\",\n            type: \"number\",\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Send!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmitWithdraw,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"amount\",\n            type: \"number\",\n            onChange: this.onWithdraw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"les go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Get current balance inside smart contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your balnce in smart contract \", this.state.contractBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.currentBalanceInside,\n          children: \"Get Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/app/src/App.js"],"names":["Web3","React","fs","Payments","NotificationContainer","NotificationManager","App","Component","constructor","props","onChange","event","preventDefault","target","name","setState","amount","value","onSubmit","e","contract","state","web3","eth","Contract","abi","gasPrice","error","callback","console","log","methods","deposit","send","from","account","gasLimit","then","receipt","info","onWithdraw","withdrawAmount","onSubmitWithdraw","withdraw","on","hash","confirmation","currentBalanceInside","getCurrentBalance","events","CurrentBalance","returnValues","contractBalance","transactionHash","alert","balance","componentDidMount","window","ethereum","currentProvider","accounts","getAccounts","getBalance","render"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from \"web3\";\n\nimport React from \"react\"\nimport fs from \"fs\"\nimport Payments from \"./build/contracts/Payments.json\"\nimport {NotificationContainer, NotificationManager}  from \"react-notifications\"\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={account: \"\", balance: \"\",  amount: \"\",withdrawAmount: \"\", contractBalance: \"\", web3: null}\n  }\n  async componentDidMount() {\n    try{\n      let web3;\n      if (window.ethereum){\n        web3 = new Web3(window.ethereum);\n      }else if(window.web3.currentProvider){\n        web3 = new Web3(window.web3.currentProvider) \n\n      }else{\n        alert(\"no provider available\")\n      }\n      \n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0])\n      console.log(accounts[2])\n      const balance = await web3.eth.getBalance(accounts[0]);\n      \n\n      /*\n      web3.eth.sendTransaction({\n        from: accounts[0], \n        data: Payments.abi,\n      }, function(error, callback){\n        console.log(error)\n      })\n      */\n      this.setState({account: accounts[0], balance: balance, web3: web3})\n      \n      \n\n    }catch(e){\n      console.log(e)\n    }\n\n  }\n\n  onChange = (event) =>{\n    event.preventDefault();\n    \n    if(event.target.name === \"amount\"){\n      this.setState({amount: event.target.value})\n    }\n\n  }\n  \n onSubmit = async (e) =>{\n  e.preventDefault()\n  \n  const contract = new this.state.web3.eth.Contract(Payments.abi,\"0x764b8BAdAF577a341d42c0fc6C22177D438C9FE8\" ,{\n    gasPrice: \"20000000000\",\n    \n  }, function(error, callback){\n    if (error !== \"undefinded\"){\n      console.error(error)\n    }else{\n      console.log(callback)\n    }\n  })\n  \n  console.log(this.state)\n  \n  await contract.methods.deposit().send({\n    from: this.state.account,\n    gasPrice: \"20000000000\",\n    gasLimit: \"6000000\",\n    value: this.state.amount\n  }).then(function(receipt){\n    console.log(receipt)\n  }, function(error, callback){\n    console.error(error)\n    NotificationManager.info(\"transaction has been rejected\")\n  })\n  \n  \n  \n  }\n\n  onWithdraw = (event) =>{\n    event.preventDefault();\n    \n    if(event.target.name === \"amount\"){\n      this.setState({withdrawAmount: event.target.value})\n    }\n\n  }\n\n\n  onSubmitWithdraw = async (e) =>{\n    e.preventDefault();\n\n    const contract = new this.state.web3.eth.Contract(Payments.abi,\"0x764b8BAdAF577a341d42c0fc6C22177D438C9FE8\" ,{\n      gasPrice: \"20000000000\",\n      gasLimit: \"6000000\",\n      from: this.state.account,\n    }, function(error, callback){\n      console.log(error, callback)\n    })\n\n    await contract.methods.withdraw(\n      this.state.withdrawAmount,\n      ).send({\n        from: this.state.account,\n        gasPrice: \"20000000000\",\n        gasLimit: \"6000000\"\n      }\n      ).on(\"transactionHash\", (hash)=>{\n        console.log(hash)\n      }).on(\"receipt\", (receipt)=>{\n        console.log(receipt)\n      }).on(\"confirmation\", (confirmation, receipt)=>{\n        console.log(confirmation, receipt)\n      }).on(\"error\", (error, callback)=>{\n        console.log(error, callback)\n        callback(\"cannot witdraw\")\n      })\n\n\n\n\n  } \n  currentBalanceInside = async (e) =>{\n    e.preventDefault();\n    \n    const contract = new this.state.web3.eth.Contract(Payments.abi, \"0x764b8BAdAF577a341d42c0fc6C22177D438C9FE8\", {\n      gasPrice: \"20000000000\",\n      gasLimit: \"6000000\",\n      from: this.state.account\n    })\n\n    await contract.methods.getCurrentBalance().send({from: this.state.account,  gasLimit: \"6000000\"}).on(\"receipt\", (receipt)=>{\n      console.log(receipt.events.CurrentBalance.returnValues.amount)\n      this.setState({contractBalance: receipt.events.CurrentBalance.returnValues.amount})\n    }).on(\"confirmation\", (transactionHash, receipt)=>{\n      console.log(transactionHash, receipt);\n    }).on(\"error\", (error, callback)=>{\n      console.error(error);\n      alert(\"transaction rejescted\")\n    })\n\n  }\n\n  render(){\n    \n\n    return (\n\n      <div>\n      <NotificationManager/>\n      <div>\n      <h1>Metmask address {this.state.account} Balance {this.state.balance}</h1>\n      <span>Deposit</span>\n      \n      <form onSubmit={this.onSubmit}>\n        <label>Amount</label>\n        <input name={\"amount\"} type={\"number\"} onChange={this.onChange}></input>\n        <button >Send!</button>\n      </form>\n\n\n      </div>\n      <div>\n        <span>Withdraw</span>\n        <form onSubmit={this.onSubmitWithdraw}>\n          <label>Amount</label>\n          <input name={\"amount\"} type={\"number\"} onChange={this.onWithdraw}></input>\n          <button type={\"submit\"} >les go</button>\n\n        </form>\n\n\n\n      </div>\n      <div>\n      <p>Get current balance inside smart contract</p>\n      <p>Your balnce in smart contract {this.state.contractBalance}</p>\n      <button onClick={this.currentBalanceInside}>Get Balance</button>\n\n\n      </div>\n      </div>\n\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}