{"ast":null,"code":"var _jsxFileName = \"/app/src/sites/MainSite.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport loadable from '@loadable/component';\nimport { makeStyles } from '@material-ui/core';\nimport { useState } from 'react';\nimport Masonry from 'react-masonry-css';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryCard = loadable(_c = () => import(\"./components/CategoryCard\"));\n_c2 = CategoryCard;\nconst ItemCard = loadable(_c3 = () => import(\"./components/ItemCard\"));\n_c4 = ItemCard;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginLeft: theme.spacing(3),\n    display: 'flex',\n    marginTop: theme.spacing(2)\n  },\n  offers: {\n    marginTop: theme.spacing(2)\n  }\n}));\nconst breakpointsCategory = {\n  default: 6,\n  1100: 4,\n  700: 3\n};\nconst breakpointsOffers = {\n  default: 1\n};\nconst sampleData = [{\n  id: 1,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}, {\n  id: 2,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}, {\n  id: 3,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}, {\n  id: 4,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}, {\n  id: 5,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}, {\n  id: 6,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}, {\n  id: 7,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}, {\n  id: 8,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}, {\n  id: 9,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}, {\n  id: 10,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}, {\n  id: 11,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}, {\n  id: 12,\n  title: \"title\",\n  description: \"description\",\n  image: \"image location\"\n}];\nconst sampleOffers = [{\n  id: 1,\n  title: \"jd\",\n  description: \"jd\",\n  image: \"jd\"\n}, {\n  id: 1,\n  title: \"jd\",\n  description: \"jd\",\n  image: \"jd\"\n}, {\n  id: 1,\n  title: \"jd\",\n  description: \"jd\",\n  image: \"jd\"\n}];\n\nfunction MainSite() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const OpenSnackbar = () => {\n    setOpen(true);\n  };\n\n  const CloseSnackbar = (_, r) => {\n    if (r === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        color: \"textSecondary\",\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        breakpointCols: breakpointsCategory,\n        className: \"my-masonry-grid\",\n        columnClassName: \"my-masonry-grid-column\",\n        children: sampleData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CategoryCard, {\n            data: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        color: \"textSecondary\",\n        className: classes.offers,\n        children: \"Offers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        breakpointCols: breakpointsOffers,\n        className: \"my-masonry-grid-offers\",\n        columnClassName: \"my-masonry-grid-column\",\n        children: sampleOffers.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ItemCard, {\n            data: item,\n            open: open,\n            onOpen: OpenSnackbar,\n            onClose: CloseSnackbar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MainSite, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c5 = MainSite;\nexport default MainSite;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CategoryCard$loadable\");\n$RefreshReg$(_c2, \"CategoryCard\");\n$RefreshReg$(_c3, \"ItemCard$loadable\");\n$RefreshReg$(_c4, \"ItemCard\");\n$RefreshReg$(_c5, \"MainSite\");","map":{"version":3,"sources":["/app/src/sites/MainSite.js"],"names":["React","loadable","makeStyles","useState","Masonry","Typography","CategoryCard","ItemCard","useStyles","theme","root","marginLeft","spacing","display","marginTop","offers","breakpointsCategory","default","breakpointsOffers","sampleData","id","title","description","image","sampleOffers","MainSite","classes","open","setOpen","OpenSnackbar","CloseSnackbar","_","r","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport loadable from '@loadable/component'\nimport {makeStyles} from '@material-ui/core'\nimport {useState} from 'react';\nimport Masonry from 'react-masonry-css';\nimport Typography from '@material-ui/core/Typography'\n\nconst CategoryCard = loadable(()=> import(\"./components/CategoryCard\"))\nconst ItemCard = loadable(()=> import(\"./components/ItemCard\"))\n\nconst useStyles = makeStyles((theme)=>({\n    root:{\n        marginLeft: theme.spacing(3),\n        display: 'flex',\n        marginTop: theme.spacing(2)\n    },\n    offers:{\n        marginTop: theme.spacing(2)\n    }\n    \n\n}))\nconst breakpointsCategory = {\n    default: 6,\n    1100: 4,\n    700: 3,\n}\nconst breakpointsOffers = {\n    default: 1,\n}\n\nconst sampleData = [\n    {\n        id: 1,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },\n    {\n        id: 2,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },\n    {\n        id: 3,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },\n    {\n        id: 4,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },\n    {\n        id: 5,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },\n    {\n        id: 6,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },\n    {\n        id: 7,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },{\n        id: 8,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },\n    {\n        id: 9,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },\n    {\n        id: 10,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },\n    {\n        id: 11,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },\n    {\n        id: 12,\n        title: \"title\",\n        description: \"description\",\n        image: \"image location\",\n    },\n]\n\nconst sampleOffers = [\n    {\n        id: 1,\n        title: \"jd\",\n        description: \"jd\",\n        image: \"jd\"\n    },\n    {\n        id: 1,\n        title: \"jd\",\n        description: \"jd\",\n        image: \"jd\"\n    },\n    {\n        id: 1,\n        title: \"jd\",\n        description: \"jd\",\n        image: \"jd\"\n    }\n]\n\n\n\nfunction MainSite(){\n    const classes = useStyles()\n    const [open, setOpen] = useState(false);\n    \n    const OpenSnackbar = () =>{\n        setOpen(true);\n      }\n    const CloseSnackbar = (_, r) =>{\n        if (r === \"clickaway\"){\n          return;\n        }\n        setOpen(false);\n    }\n    \n    return(\n        <div>\n            <div>\n            <Typography\n                variant=\"h2\"\n                color=\"textSecondary\"\n                >\n                    Categories\n                </Typography>\n            </div>\n            <div className={classes.root}>\n                <Masonry\n                breakpointCols={breakpointsCategory}\n                className=\"my-masonry-grid\"\n                columnClassName=\"my-masonry-grid-column\"\n                >   \n                    {sampleData.map(item=>(\n                        <div>\n                            <CategoryCard data={item}></CategoryCard>\n                        </div>\n\n                    ))}\n                </Masonry>\n\n            </div>\n            <div>\n                <Typography\n                variant=\"h2\"\n                color=\"textSecondary\"\n                className={classes.offers}\n                >\n                    Offers\n                </Typography>\n            </div>\n            <div className={classes.root}>\n                    <Masonry\n                    breakpointCols={breakpointsOffers}\n                    className=\"my-masonry-grid-offers\"\n                    columnClassName=\"my-masonry-grid-column\"\n                    >\n                        {sampleOffers.map(item=>(\n                        <div>\n                            <ItemCard data={item} open={open} onOpen={OpenSnackbar} onClose={CloseSnackbar} ></ItemCard>\n                        </div>\n\n                    ))}\n\n                    </Masonry>\n            </div>\n        </div>\n    )\n    \n}\nexport default MainSite;\n"]},"metadata":{},"sourceType":"module"}