{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport React from \"react\";\nimport fs from \"fs\";\nimport Payments from \"./build/contracts/Payments.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      event.preventDefault();\n\n      if (event.target.name === \"amount\") {\n        this.setState({\n          amount: event.target.value\n        });\n      }\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const contract = new this.state.web3.eth.Contract(Payments.abi, \"0xfC89619e06DFF8F2fd6fb9e138a5b7e77636A0D0\", {\n        gasPrice: \"20000000000\",\n        gasLimit: \"6000000\",\n        from: this.state.account\n      });\n      console.log(this.state);\n      await contract.methods.deposit(2).send({\n        from: this.state.account,\n        gasPrice: \"20000000000\",\n        gasLimit: \"6000000\",\n        value: this.state.amount\n      }).on(\"transactionHash\", function (hash) {\n        console.log(hash);\n      }).on(\"receipt\", function (receipt) {\n        console.log(receipt);\n      }).on(\"confirmation\", function (confirmation, receipt) {\n        console.log(confirmation, receipt);\n      });\n    };\n\n    this.onWithdraw = event => {\n      event.preventDefault();\n\n      if (event.target.name === \"amount\") {\n        this.setState({\n          withdrawAmount: event.target.value\n        });\n      }\n    };\n\n    this.onSubmitWithdraw = async e => {\n      e.preventDefault();\n      const contract = new this.state.web3.eth.Contract(Payments.abi, \"0xfC89619e06DFF8F2fd6fb9e138a5b7e77636A0D0\", {\n        gasPrice: \"20000000000\",\n        gasLimit: \"6000000\",\n        from: this.state.account\n      }, function (error, callback) {\n        console.log(error, callback);\n      });\n      await contract.methods.withdraw(this.state.withdrawAmount).send({\n        from: this.state.account,\n        gasPrice: \"20000000000\",\n        gasLimit: \"6000000\"\n      }).on(\"transactionHash\", hash => {\n        console.log(hash);\n      }).on(\"receipt\", receipt => {\n        console.log(receipt);\n      }).on(\"confirmation\", (confirmation, receipt) => {\n        console.log(confirmation, receipt);\n      }).on(\"error\", (error, callback) => {\n        console.log(error, callback);\n      });\n    };\n\n    this.currentBalanceInside = async e => {\n      e.preventDefault();\n      const contract = new this.state.web3.eth.Contract(Payments.abi, \"0xfC89619e06DFF8F2fd6fb9e138a5b7e77636A0D0\", {\n        gasPrice: \"20000000000\",\n        gasLimit: \"6000000\",\n        from: this.state.account\n      });\n      await contract.methods.getCurrentBalance().send({\n        from: this.state.account,\n        gasLimit: \"6000000\"\n      }).on(\"transactionHash\", hash => {\n        console.log(hash);\n      }).on(\"receipt\", receipt => {\n        console.log(receipt.events.CurrentBalance.returnValues.amount);\n        this.setState({\n          contractBalance: receipt.events.CurrentBalance.returnValues.amount\n        });\n      }).on(\"confirmation\", (transactionHash, receipt) => {\n        console.log(transactionHash, receipt);\n      }).on(\"error\", (error, callback) => {\n        console.log(error, callback);\n      });\n    };\n\n    this.state = {\n      account: \"\",\n      balance: \"\",\n      amount: \"\",\n      withdrawAmount: \"\",\n      contractBalance: \"\",\n      web3: null\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      let web3;\n\n      if (window.ethereum) {\n        web3 = new Web3(window.ethereum);\n      } else if (window.web3.currentProvider) {\n        web3 = new Web3(window.web3.currentProvider);\n      } else {\n        alert(\"no provider available\");\n      }\n\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0]);\n      console.log(accounts[2]);\n      const balance = await web3.eth.getBalance(accounts[0]);\n      /*\n      web3.eth.sendTransaction({\n        from: accounts[0], \n        data: Payments.abi,\n      }, function(error, callback){\n        console.log(error)\n      })\n      */\n\n      this.setState({\n        account: accounts[0],\n        balance: balance,\n        web3: web3\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Metmask address \", this.state.account, \" Balance \", this.state.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"amount\",\n            type: \"number\",\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmitWithdraw,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"amount\",\n            type: \"number\",\n            onChange: this.onWithdraw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"les go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Get current balance inside smart contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your balnce in smart contract \", this.state.contractBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.currentBalanceInside,\n          children: \"Get Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/app/src/App.js"],"names":["Web3","React","fs","Payments","App","Component","constructor","props","onChange","event","preventDefault","target","name","setState","amount","value","onSubmit","e","contract","state","web3","eth","Contract","abi","gasPrice","gasLimit","from","account","console","log","methods","deposit","send","on","hash","receipt","confirmation","onWithdraw","withdrawAmount","onSubmitWithdraw","error","callback","withdraw","currentBalanceInside","getCurrentBalance","events","CurrentBalance","returnValues","contractBalance","transactionHash","balance","componentDidMount","window","ethereum","currentProvider","alert","accounts","getAccounts","getBalance","render"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from \"web3\";\n \n\n\nimport React from \"react\"\nimport fs from \"fs\"\nimport Payments from \"./build/contracts/Payments.json\"\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={account: \"\", balance: \"\",  amount: \"\",withdrawAmount: \"\", contractBalance: \"\", web3: null}\n  }\n  async componentDidMount() {\n    try{\n      let web3;\n      if (window.ethereum){\n        web3 = new Web3(window.ethereum);\n      }else if(window.web3.currentProvider){\n        web3 = new Web3(window.web3.currentProvider) \n      }else{\n        alert(\"no provider available\")\n      }\n      \n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0])\n      console.log(accounts[2])\n      const balance = await web3.eth.getBalance(accounts[0]);\n      \n\n      /*\n      web3.eth.sendTransaction({\n        from: accounts[0], \n        data: Payments.abi,\n      }, function(error, callback){\n        console.log(error)\n      })\n      */\n      this.setState({account: accounts[0], balance: balance, web3: web3})\n      \n      \n\n    }catch(e){\n      console.log(e)\n    }\n\n  }\n\n  onChange = (event) =>{\n    event.preventDefault();\n    \n    if(event.target.name === \"amount\"){\n      this.setState({amount: event.target.value})\n    }\n\n  }\n  \n onSubmit = async (e) =>{\n  e.preventDefault()\n  \n  const contract = new this.state.web3.eth.Contract(Payments.abi,\"0xfC89619e06DFF8F2fd6fb9e138a5b7e77636A0D0\" ,{\n    gasPrice: \"20000000000\",\n    gasLimit: \"6000000\",\n    from: this.state.account,\n  })\n  \n  console.log(this.state)\n  \n  await contract.methods.deposit(2).send({\n    from: this.state.account,\n    gasPrice: \"20000000000\",\n    gasLimit: \"6000000\",\n    value: this.state.amount\n  }).on(\"transactionHash\", function(hash){\n    console.log(hash)\n  }).on(\"receipt\", function(receipt){\n    console.log(receipt)\n  }).on(\"confirmation\", function(confirmation, receipt){\n    console.log(confirmation, receipt)\n  })\n  \n  \n\n  }\n\n  onWithdraw = (event) =>{\n    event.preventDefault();\n    \n    if(event.target.name === \"amount\"){\n      this.setState({withdrawAmount: event.target.value})\n    }\n\n  }\n\n\n  onSubmitWithdraw = async (e) =>{\n    e.preventDefault();\n\n    const contract = new this.state.web3.eth.Contract(Payments.abi,\"0xfC89619e06DFF8F2fd6fb9e138a5b7e77636A0D0\" ,{\n      gasPrice: \"20000000000\",\n      gasLimit: \"6000000\",\n      from: this.state.account,\n    }, function(error, callback){\n      console.log(error, callback)\n    })\n\n    await contract.methods.withdraw(\n      this.state.withdrawAmount,\n      ).send({\n        from: this.state.account,\n        gasPrice: \"20000000000\",\n        gasLimit: \"6000000\"\n      }\n      ).on(\"transactionHash\", (hash)=>{\n        console.log(hash)\n      }).on(\"receipt\", (receipt)=>{\n        console.log(receipt)\n      }).on(\"confirmation\", (confirmation, receipt)=>{\n        console.log(confirmation, receipt)\n      }).on(\"error\", (error, callback)=>{\n        console.log(error, callback)\n      })\n\n\n\n\n  } \n  currentBalanceInside = async (e) =>{\n    e.preventDefault();\n    \n    const contract = new this.state.web3.eth.Contract(Payments.abi, \"0xfC89619e06DFF8F2fd6fb9e138a5b7e77636A0D0\", {\n      gasPrice: \"20000000000\",\n      gasLimit: \"6000000\",\n      from: this.state.account\n    })\n\n    await contract.methods.getCurrentBalance().send({from: this.state.account,  gasLimit: \"6000000\"}).on(\"transactionHash\",(hash)=>{\n      console.log(hash);\n    }).on(\"receipt\", (receipt)=>{\n      console.log(receipt.events.CurrentBalance.returnValues.amount)\n      this.setState({contractBalance: receipt.events.CurrentBalance.returnValues.amount})\n    }).on(\"confirmation\", (transactionHash, receipt)=>{\n      console.log(transactionHash, receipt);\n    }).on(\"error\", (error, callback)=>{\n      console.log(error, callback);\n    })\n\n  }\n\n  render(){\n    \n\n    return (\n\n      <div>\n      <div>\n      <h1>Metmask address {this.state.account} Balance {this.state.balance}</h1>\n      <span>Deposit</span>\n      \n      <form onSubmit={this.onSubmit}>\n        <label>Amount</label>\n        <input name=\"amount\" type=\"number\" onChange={this.onChange}></input>\n        <button type=\"submit\" >Send!</button>\n      </form>\n\n\n      </div>\n      <div>\n        <span>Withdraw</span>\n        <form onSubmit={this.onSubmitWithdraw}>\n          <label>Amount</label>\n          <input name=\"amount\" type=\"number\" onChange={this.onWithdraw}></input>\n          <button type=\"submit\">les go</button>\n\n        </form>\n\n\n\n      </div>\n      <div>\n      <p>Get current balance inside smart contract</p>\n      <p>Your balnce in smart contract {this.state.contractBalance}</p>\n      <button onClick={this.currentBalanceInside}>Get Balance</button>\n\n\n      </div>\n      </div>\n\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}