{"ast":null,"code":"var _jsxFileName = \"/app/src/sites/RegisterFormSite.js\";\n\n/*import React from \"react\";\n\nimport {makeStyles} from \"@material-ui/core\"\nimport {useState} from \"react\"\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography'\nimport {useHistory} from \"react-router-dom\"\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport IconButton from '@material-ui/core/IconButton'\nimport CheckIfSessionCookieExists from \"../components/CheckIfSessionCookieExists\"\n\nconst useStyles = makeStyles((theme)=>({\n    root:{\n            \n    },\n    form:{\n        display: \"inline-block\",\n        marginTop: theme.spacing(3),\n        marginLeft: \"40%\", \n    },\n\n}))\n\nexport default function RegisterFormSite(){\n    const classes = useStyles();\n    const [username, changeUsername] = useState(\"\")\n    const [email, changeEmail] = useState(\"\")\n    const [password, changePassword] = useState(\"\")\n    const [passwordVisibility, changePasswordVisibility] = useState(false)\n    const checkLogin = CheckIfSessionCookieExists()\n    const history = useHistory();\n    const onChange = (e) =>{\n        e.preventDefault();\n        \n        switch(e.target.id){\n            case \"username\":\n                changeUsername(e.target.value);\n                break\n            case \"email\":\n                changeEmail(e.target.value);\n                break\n            case \"password\":\n                changePassword(e.target.value);\n                break\n            case \"avatar-upload\":\n                //changeUsername(e.target.value);\n               break\n            default: \n                break\n        }\n    }\n    const onSubmit = async() =>{\n        //TODO ADD NOTIFICATIONS \n        const passswordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\n        if (email === \"\"){\n            console.log(\"empty email\")\n        }else if(password === \"\" || password.match(passswordRegex)){\n            console.log(\"empty or poor password\")\n        }else if(username === \"\"){\n            console.log(\"empty username\")\n        }\n\n        //TODO ADD DATA TRANSITION TO BACKEND\n    }\n    const setPasswordVisible = () =>{\n        changePasswordVisibility(true)\n    }\n    const setPasswordInvisible = () =>{\n        changePasswordVisibility(false)\n    }\n    if(!checkLogin){\n        return(\n            <div className={classes.root}>\n                <Typography variant=\"h2\">\n                    Login Page\n                </Typography>\n                <Typography variant=\"h6\">\n                    Welcome, have a nice time :)\n                </Typography>\n                <form noValidate autoComplete=\"off\" method=\"post\" onSubmit={onSubmit}>\n                    <TextField className={classes.form} type=\"text\" id=\"username\" label=\"Username\" onChange={onChange}/>\n                    <TextField className={classes.form} type=\"email\" id=\"email\" label=\"E-mail\" onChange={onChange}/>\n                    <TextField className={classes.form} type={passwordVisibility === true? \"text\" : \"password\"} id=\"password\" label=\"Password\" visible={passwordVisibility} onChange={onChange}/>\n                    <IconButton  onClick={passwordVisibility===true ? setPasswordInvisible: setPasswordVisible}>\n                        {passwordVisibility===true ? <VisibilityOffOutlinedIcon/> : <VisibilityOutlinedIcon/>}\n                    </IconButton>\n                    <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    \n                    className={classes.form}\n                    //TODO ADD HCAPTCHA\n                    >Log In!</Button>\n                </form>\n            </div>\n        )\n        }else{\n            return(\n            <div>\n                {history.push(\"/\")}\n            </div>\n            )\n        }\n}\n*/\nimport React from 'react';\nimport loadable from '@loadable/component';\nimport FormComponent from \"../components/FormComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginFormSite() {\n  return /*#__PURE__*/_jsxDEV(FormComponent, {\n    version: \"login-register\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n_c = LoginFormSite;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormSite\");","map":{"version":3,"sources":["/app/src/sites/RegisterFormSite.js"],"names":["React","loadable","FormComponent","LoginFormSite"],"mappingskB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AACA,eAAe,SAASC,aAAT,GAAwB;AACnC,sBACI,QAAC,aAAD;AAAe,IAAA,OAAO,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;KAJuBA,a","sourcesContent":["/*import React from \"react\";\n\nimport {makeStyles} from \"@material-ui/core\"\nimport {useState} from \"react\"\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography'\nimport {useHistory} from \"react-router-dom\"\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport IconButton from '@material-ui/core/IconButton'\nimport CheckIfSessionCookieExists from \"../components/CheckIfSessionCookieExists\"\n\nconst useStyles = makeStyles((theme)=>({\n    root:{\n            \n    },\n    form:{\n        display: \"inline-block\",\n        marginTop: theme.spacing(3),\n        marginLeft: \"40%\", \n    },\n\n}))\n\nexport default function RegisterFormSite(){\n    const classes = useStyles();\n    const [username, changeUsername] = useState(\"\")\n    const [email, changeEmail] = useState(\"\")\n    const [password, changePassword] = useState(\"\")\n    const [passwordVisibility, changePasswordVisibility] = useState(false)\n    const checkLogin = CheckIfSessionCookieExists()\n    const history = useHistory();\n    const onChange = (e) =>{\n        e.preventDefault();\n        \n        switch(e.target.id){\n            case \"username\":\n                changeUsername(e.target.value);\n                break\n            case \"email\":\n                changeEmail(e.target.value);\n                break\n            case \"password\":\n                changePassword(e.target.value);\n                break\n            case \"avatar-upload\":\n                //changeUsername(e.target.value);\n               break\n            default: \n                break\n        }\n    }\n    const onSubmit = async() =>{\n        //TODO ADD NOTIFICATIONS \n        const passswordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\n        if (email === \"\"){\n            console.log(\"empty email\")\n        }else if(password === \"\" || password.match(passswordRegex)){\n            console.log(\"empty or poor password\")\n        }else if(username === \"\"){\n            console.log(\"empty username\")\n        }\n\n        //TODO ADD DATA TRANSITION TO BACKEND\n    }\n    const setPasswordVisible = () =>{\n        changePasswordVisibility(true)\n    }\n    const setPasswordInvisible = () =>{\n        changePasswordVisibility(false)\n    }\n    if(!checkLogin){\n        return(\n            <div className={classes.root}>\n                <Typography variant=\"h2\">\n                    Login Page\n                </Typography>\n                <Typography variant=\"h6\">\n                    Welcome, have a nice time :)\n                </Typography>\n                <form noValidate autoComplete=\"off\" method=\"post\" onSubmit={onSubmit}>\n                    <TextField className={classes.form} type=\"text\" id=\"username\" label=\"Username\" onChange={onChange}/>\n                    <TextField className={classes.form} type=\"email\" id=\"email\" label=\"E-mail\" onChange={onChange}/>\n                    <TextField className={classes.form} type={passwordVisibility === true? \"text\" : \"password\"} id=\"password\" label=\"Password\" visible={passwordVisibility} onChange={onChange}/>\n                    <IconButton  onClick={passwordVisibility===true ? setPasswordInvisible: setPasswordVisible}>\n                        {passwordVisibility===true ? <VisibilityOffOutlinedIcon/> : <VisibilityOutlinedIcon/>}\n                    </IconButton>\n                    <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    \n                    className={classes.form}\n                    //TODO ADD HCAPTCHA\n                    >Log In!</Button>\n                </form>\n            </div>\n        )\n        }else{\n            return(\n            <div>\n                {history.push(\"/\")}\n            </div>\n            )\n        }\n}\n*/\nimport React from 'react'\nimport loadable from '@loadable/component'\nimport FormComponent from \"../components/FormComponent\"\nexport default function LoginFormSite(){\n    return(\n        <FormComponent version=\"login-register\"></FormComponent>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}