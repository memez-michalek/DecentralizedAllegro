{"ast":null,"code":"var _jsxFileName = \"/app/src/components/FormComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { useState } from \"react\";\nimport loadable from '@loadable/component';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\nimport CheckIfSessionCookieExists from \"./CheckIfSessionCookieExists\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextField = loadable(_c = () => import(\"./FormFields/TextField\"));\n_c2 = TextField;\nconst styles = makeStyles(theme => ({\n  root: {\n    display: \"block\",\n    marginTop: theme.spacing(3),\n    marginLeft: \"40%\"\n  }\n}));\nexport default function FormComponent(props) {\n  _s();\n\n  const classes = styles();\n  const isLoggedIn = CheckIfSessionCookieExists();\n  let passwordFieldState = {\n    true: \"text\",\n    false: \"password\"\n  };\n  const [passwordVisibility, changePasswordVisibility] = useState(false);\n  const [email, changeEmail] = useState(\"\");\n  const [username, changeUsername] = useState(\"\");\n  const [password, changePassword] = useState(\"\");\n  const history = useHistory();\n\n  const onChange = e => {\n    e.preventDefault();\n    console.log(e.target.name);\n\n    switch (e.target.name) {\n      case \"email\":\n        changeEmail(e.target.value);\n        break;\n\n      case \"username\":\n        changeUsername(e.target.value);\n        break;\n\n      case \"password\":\n        changePassword(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  function onSubmit(e) {\n    switch (e.target.name) {\n      case \"login\":\n        const passwordRegex = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})');\n\n        if (email === \"\") {\n          console.log(\"empty email\");\n        } else if (password === \"\" || password.match(passwordRegex)) {\n          console.log(\"empty or poor password\");\n        } else if (username === \"\") {\n          console.log(\"empty username\");\n        }\n\n        console.log(username);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  if (!isLoggedIn) {\n    switch (props.version) {\n      case \"login\":\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"post\",\n          onSubmit: onSubmit,\n          name: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.form,\n            type: \"text\",\n            id: \"username-login\",\n            label: \"username\",\n            name: \"username\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.form,\n            type: \"email\",\n            id: \"email-login\",\n            label: \"email\",\n            name: \"email\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.form,\n            type: passwordFieldState[passwordVisibility],\n            id: \"password-login\",\n            label: \"password\",\n            name: \"password\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => passwordVisibility === false ? changePasswordVisibility(true) : changePasswordVisibility(false),\n            children: passwordVisibility === true ? /*#__PURE__*/_jsxDEV(VisibilityOffOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 81\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.form,\n            type: \"submit\",\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this);\n\n      case \"register\":\n        break;\n\n      default:\n        break;\n    }\n  } else {\n    switch (props.version) {\n      case \"addListing\":\n        break;\n\n      default:\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: history.push(\"/\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(FormComponent, \"M5KjMevJ4aRUR1FRk6pFZgLqMqE=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = FormComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextField$loadable\");\n$RefreshReg$(_c2, \"TextField\");\n$RefreshReg$(_c3, \"FormComponent\");","map":{"version":3,"sources":["/app/src/components/FormComponent.js"],"names":["React","makeStyles","useState","loadable","IconButton","VisibilityOutlinedIcon","VisibilityOffOutlinedIcon","Button","useHistory","CheckIfSessionCookieExists","FormControl","TextField","styles","theme","root","display","marginTop","spacing","marginLeft","FormComponent","props","classes","isLoggedIn","passwordFieldState","true","false","passwordVisibility","changePasswordVisibility","email","changeEmail","username","changeUsername","password","changePassword","history","onChange","e","preventDefault","console","log","target","name","value","onSubmit","passwordRegex","RegExp","match","version","form","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core'\nimport {useState} from \"react\"\nimport loadable from '@loadable/component'\nimport IconButton from \"@material-ui/core/IconButton\"\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport Button from '@material-ui/core/Button';\nimport {useHistory} from \"react-router-dom\"\nimport CheckIfSessionCookieExists from \"./CheckIfSessionCookieExists\"\nimport FormControl from \"@material-ui/core/FormControl\"\n\nconst TextField = loadable(()=> import(\"./FormFields/TextField\"))\n\nconst styles = makeStyles((theme) =>({\n    root:{\n        display: \"block\",\n        marginTop: theme.spacing(3),\n        marginLeft: \"40%\", \n    },\n\n}))\n\nexport default function FormComponent(props){\n    const classes = styles()\n    const isLoggedIn = CheckIfSessionCookieExists();\n    let passwordFieldState = { true : \"text\", false: \"password\"}\n    const [passwordVisibility, changePasswordVisibility] = useState(false);\n    const [email, changeEmail] = useState(\"\");\n    const [username, changeUsername] = useState(\"\");\n    const [password, changePassword] = useState(\"\");\n    const history = useHistory();\n\n    const onChange = (e) =>{\n        e.preventDefault();\n        console.log(e.target.name)\n        switch(e.target.name){\n            case \"email\":\n                changeEmail(e.target.value)\n                break\n            case \"username\":\n                changeUsername(e.target.value)\n                break\n            case \"password\":\n                changePassword(e.target.value)\n                break\n            default:\n                break\n        }\n    }\n    \n    function onSubmit(e){\n        switch(e.target.name){\n            case \"login\":\n                const passwordRegex = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})')\n                if (email === \"\"){\n                    console.log(\"empty email\")\n                }else if(password === \"\" || password.match(passwordRegex)){\n                    console.log(\"empty or poor password\")\n                }else if(username === \"\"){\n                    console.log(\"empty username\")\n                }\n                console.log(username)\n                break\n            default:\n                break\n        }\n    }\n    if (!isLoggedIn){\n        switch(props.version){\n            case \"login\":\n                return(\n                <form method=\"post\" onSubmit={onSubmit} name=\"login\">\n                    <TextField className={classes.form} type=\"text\" id=\"username-login\" label=\"username\" name=\"username\" onChange={onChange}></TextField>\n                    <TextField className={classes.form} type=\"email\" id=\"email-login\" label=\"email\" name=\"email\" onChange={onChange}></TextField>\n                    <TextField className={classes.form} type={passwordFieldState[passwordVisibility]} id=\"password-login\" label=\"password\" name=\"password\" onChange={onChange}></TextField>\n                    <IconButton onClick={()=>passwordVisibility===false ? changePasswordVisibility(true) : changePasswordVisibility(false)}>\n                    {passwordVisibility===true ? <VisibilityOffOutlinedIcon/> : <VisibilityOutlinedIcon/>}\n                    </IconButton>\n                    <Button className={classes.form} type=\"submit\" variant=\"outlined\" color=\"primary\">Log In</Button>\n                </form>\n                )    \n            case \"register\":\n                break\n\n            default:\n                break\n        }\n    }else{\n        switch(props.version){\n            case \"addListing\":\n                break\n            default:\n                break\n        }\n        return(\n            <div>\n                {history.push(\"/\")}\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}