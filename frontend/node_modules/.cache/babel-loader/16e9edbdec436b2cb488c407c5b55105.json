{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport React from \"react\";\nimport fs from \"fs\";\nimport Payments from \"./build/contracts/Payments.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      event.preventDefault();\n\n      if (event.target.name === \"amount\") {\n        this.setState({\n          amount: event.target.value\n        });\n      }\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const contract = new this.state.web3.eth.Contract(Payments.abi, \"0xbeC5e60749d79a69285FdB5Cf1D53a6A17622E86\", {\n        gasPrice: \"20000000000\"\n      }, function (error, callback) {\n        if (error !== \"undefinded\") {\n          console.error(error);\n        } else {\n          console.log(callback);\n        }\n      });\n      const gasLimit = await contract.methods.deposit(2).estimateGasLimit();\n      console.log(contract);\n      const res = await contract.methods.deposit(2).send({\n        from: this.state.account,\n        gasPrice: \"20000000000\",\n        gasLimit: gasLimit,\n        value: this.state.amount\n      });\n      console.log(res);\n    };\n\n    this.state = {\n      account: \"\",\n      balance: \"\",\n      address: \"\",\n      amount: \"\",\n      web3: null\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      let web3;\n\n      if (window.ethereum) {\n        web3 = new Web3(window.ethereum);\n      } else if (window.web3.currentProvider) {\n        web3 = new Web3(window.web3.currentProvider);\n      } else {\n        alert(\"no provider available\");\n      }\n\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0]);\n      console.log(accounts[2]);\n      const balance = await web3.eth.getBalance(accounts[0]);\n      /*\n      web3.eth.sendTransaction({\n        from: accounts[0], \n        data: Payments.abi,\n      }, function(error, callback){\n        console.log(error)\n      })\n      */\n\n      this.setState({\n        account: accounts[0],\n        balance: balance,\n        web3: web3\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Metmask address \", this.state.account, \" Balance \", this.state.balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"amount\",\n          type: \"number\",\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/app/src/App.js"],"names":["Web3","React","fs","Payments","App","Component","constructor","props","onChange","event","preventDefault","target","name","setState","amount","value","onSubmit","e","contract","state","web3","eth","Contract","abi","gasPrice","error","callback","console","log","gasLimit","methods","deposit","estimateGasLimit","res","send","from","account","balance","address","componentDidMount","window","ethereum","currentProvider","alert","accounts","getAccounts","getBalance","render"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from \"web3\";\n \n\n\nimport React from \"react\"\nimport fs from \"fs\"\nimport Payments from \"./build/contracts/Payments.json\"\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={account: \"\", balance: \"\", address: \"\", amount: \"\", web3: null}\n  }\n  async componentDidMount() {\n    try{\n      let web3;\n      if (window.ethereum){\n        web3 = new Web3(window.ethereum);\n      }else if(window.web3.currentProvider){\n        web3 = new Web3(window.web3.currentProvider) \n      }else{\n        alert(\"no provider available\")\n      }\n      \n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0])\n      console.log(accounts[2])\n      const balance = await web3.eth.getBalance(accounts[0]);\n      \n\n      /*\n      web3.eth.sendTransaction({\n        from: accounts[0], \n        data: Payments.abi,\n      }, function(error, callback){\n        console.log(error)\n      })\n      */\n      this.setState({account: accounts[0], balance: balance, web3: web3})\n      \n      \n\n    }catch(e){\n      console.log(e)\n    }\n\n  }\n\n  onChange = (event) =>{\n    event.preventDefault();\n    \n    if(event.target.name === \"amount\"){\n      this.setState({amount: event.target.value})\n    }\n\n  }\n  \n onSubmit = async (e) =>{\n  e.preventDefault()\n  \n  \n  \n  const contract = new this.state.web3.eth.Contract(Payments.abi,\"0xbeC5e60749d79a69285FdB5Cf1D53a6A17622E86\" ,{\n    gasPrice: \"20000000000\",\n  }, function(error, callback){\n    if (error !== \"undefinded\"){\n      console.error(error)\n    }else{\n      console.log(callback)\n    }\n  })\n  const gasLimit = await contract.methods.deposit(2).estimateGasLimit();\n  console.log(contract)\n  const res = await contract.methods.deposit(2).send({from: this.state.account, gasPrice: \"20000000000\", gasLimit: gasLimit, value: this.state.amount})\n  console.log(res)\n  \n  \n\n}\n\n  render(){\n    \n\n    return (\n      <div>\n      <h1>Metmask address {this.state.account} Balance {this.state.balance}</h1>\n\n      \n      <form onSubmit={this.onSubmit}>\n        <label>Amount</label>\n        <input name=\"amount\" type=\"number\" onChange={this.onChange}></input>\n        <button type=\"submit\" >Send!</button>\n      </form>\n\n\n      </div>\n\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}